import pygame
import random
import os

#Constants - Game
WIDTH = 600
HEIGHT = 300
FPS = 30
GROUND = HEIGHT - 30
SLOW = 3
FAST = 8

#Constants - Physics
PLAYER_ACC = 0.9
PLAYER_FRICTION = -0.12
PLAYER_GRAV = 0.9
vec = pygame.math.Vector2

#Colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0 )
RED = (255, 0, 0,)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)

#Asset Folders
game_folder = os.path.dirname(__file__)
img_folder = os.path.join(game_folder, "img")

#Player Class
class Player(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load(os.path.join(img_folder, "Foot player.png")).convert()
        self.image.set_colorkey(BLACK)
        self.rect = self.image.get_rect()
        #self.image = pygame.transform.scale(self.image, (100,100))

        self.pos = vec(10, GROUND -60)
        self.vel = vec(0, 0)
        self.acc = vec(0, 0)

    def update(self):

        self.acc = vec(0, PLAYER_GRAV)

        #Returns a list of keys pressed
        keystate = pygame.key.get_pressed()
        if keystate[pygame.K_RIGHT]:
            self.acc.x += PLAYER_ACC
        if keystate[pygame.K_LEFT]:
            self.acc.x += -PLAYER_ACC
        if keystate[pygame.K_UP]:
            self.rect.y += -10
        if keystate[pygame.K_DOWN]:
            self.rect.y += 10
        if self.vel.y == 0 and keystate[pygame.K_SPACE]:
            self.vel.y = -20

        #Applies friction
        self.acc.x += self.vel.x * PLAYER_FRICTION

        #Nerd equations - Equation of motion
        self.vel += self.acc
        self.pos += self.vel + 0.5 * self.acc

        #Warp around screen
        if self.pos.x > WIDTH:
            self.pos.x = 0
        if self.pos.x < 0:
            self.pos.x = WIDTH

        #Simulate Ground
        if self.pos.y > GROUND:
            self.pos.y = GROUND + 1
            self.vel.y = 0

        #Player postion based on nerd code above
        self.rect.midbottom = self.pos

class Platform(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load(os.path.join(img_folder, "Hand Platform.png")).convert()
        self.image.set_colorkey(WHITE)
        self.rect = self.image.get_rect()
        self.rect.x = 10
        self.rect.y = HEIGHT - 80

    def update(self):
        self.rect.x += -5
        if self.rect.right < 0:
            self.rect.left = WIDTH 

#initialize Variables
pygame.init()
pygame.mixer.init()
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("My Game")

clock = pygame.time.Clock()

#Sprite Groups
all_sprites = pygame.sprite.Group()

player = Player()
platform = Platform()

all_sprites.add(player)
all_sprites.add(platform)

run = True
while run:
    clock.tick(FPS)

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False

    #update
    all_sprites.update()

    #Draw
    screen.fill(BLUE)
    all_sprites.draw(screen)

    #Flip
    pygame.display.flip()

pygame.quit()
